<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<description>Spring的db配置。配置两套db，一套供snaker框架使用功能，另外一套供gd项目使用 </description>

	
<!-- *********************************snaker的core框架db配置 start********************************* -->
	<bean id="dbAccess" class="org.snaker.engine.spring.SpringJdbcAccess">
		<property name="dataSource" ref="dataSource" />
		<property name="lobHandler" ref="lobHandler" />
	</bean>
	
	
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true" />

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="start*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="execute*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="persist*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="assign*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="complete*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="finish*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="terminate*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="take*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="deploy*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="undeploy*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="redeploy*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="taskActorChanged" propagation="REQUIRED" rollback-for="Exception"/>

			<tx:method name="get*" propagation="REQUIRED" read-only="true" rollback-for="Exception"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true" rollback-for="Exception"/>
			<tx:method name="query*" propagation="REQUIRED" read-only="true" rollback-for="Exception"/>
			<tx:method name="search*" propagation="REQUIRED" read-only="true" rollback-for="Exception"/>
			<tx:method name="is*" propagation="REQUIRED" read-only="true" rollback-for="Exception"/>
			<tx:method name="*" propagation="REQUIRED" read-only="true"  rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!-- snaker框架的核心服务提供事务支持 -->
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* org.snaker.engine.core..*.*(..))" />
			
		<!-- gd的扩展服务提供事务支持 -->
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* cn.gdeng.market.service.workflow..*.*(..))" />
	</aop:config>
<!-- *********************************snaker的core框架db配置 end********************************* -->
	
	
	
<!-- *********************************gd专用的db框架配置 start********************************* -->
	
	<!-- DAL客户端接口实现 -->
	<bean id="dbaClient" class="cn.gdeng.market.dao.dba.client.GuDengDbaClient">
		<!-- SQL的Xml配置路径 -->
		<property name="resources" value="classpath*:sqlMap/sqlMap_*.xml" />
		<!-- 定义默义的数据源 -->
		<property name="defaultDataSource" ref="dataSource" />
	</bean>
	
	<!-- 定义基本的数据库操作类。不再额外的配置事务，与snaker共用一个事务。 -->
	<bean id="baseDao" class="cn.gdeng.market.dao.base.impl.BaseDaoImpl" />
	
<!-- *********************************gd专用的db框架配置 end********************************* -->
	
</beans>